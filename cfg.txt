S -> MAIN

MAIN -> MAIN MAIN
MAIN -> VAR_DEC
MAIN -> CONST_DEC
MAIN -> LET_DEC
MAIN -> IF_BLOCK
MAIN -> FOR_BLOCK
MAIN -> WHILE_BLOCK
MAIN -> SWITCH_BLOCK
MAIN -> FUNCTION_BLOCK
MAIN -> ERROR_BLOCK
MAIN -> OPERATION
MAIN -> DELETE_BLOCK
MAIN -> VALUE_DECLARATION

VAR_DEC -> VAR VARIABLE
VAR_DEC -> VAR VARIABLE EQUAL VALUE

LET_DEC -> LET VARIABLE
LET_DEC -> LET VARIABLE EQUAL VALUE

CONST_DEC -> CONST VARIABLE EQUAL VARIABLE

VALUE_DECLARATION -> VARIABLE EQUAL VALUE
VALUE_DECLARATION -> VARIABLE SBRACKET_OPEN INTEGER SBRACKET_CLOSE EQUAL VALUE
VALUE_DECLARATION -> VARIABLE SBRACKET_OPEN VARIABLE SBRACKET_CLOSE EQUAL VALUE

VALUE -> VARIABLE
VALUE -> FUNC_RESULT
VALUE -> OBJECT_BLOCK
VALUE -> OPERATION
VALUE -> OBJECT_RESULT
VALUE -> NUMBER_TYPE
VALUE -> STRING
VALUE -> NULL
VALUE -> NAN
VALUE -> TRUE
VALUE -> FALSE
VALUE -> SIGN VALUE

NUMBER_TYPE -> INTEGER
NUMBER_TYPE -> FLOAT

INTEGER -> INTEGER INTEGER
INTEGER -> NUMBER
INTEGER -> integer

FLOAT -> INTEGER DOT INTEGER
FLOAT -> float

OBJECT_RESULT -> VARIABLE DOT VARIABLE
OBJECT_RESULT -> VARIABLE DOT VARIABLE RBRACKET_OPEN RBRACKET_CLOSE

FUNC_RESULT -> FUNC_NAME RBRACKET_OPEN RBRACKET_CLOSE
FUNC_RESULT -> FUNC_NAME RBRACKET_OPEN FUNC_PARAM RBRACKET_CLOSE

OBJECT_BLOCK -> CBRACKET_OPEN OBJECT CBRACKET_CLOSE
OBJECT -> OBJECT COMMA OBJECT
OBJECT -> OBJECT_PROP COLON OBJECT_VALUE

IF_BLOCK -> IF RBRACKET_OPEN CONDITIONAL RBRACKET_CLOSE CBRACKET_OPEN MAIN CBRACKET_CLOSE
IF_BLOCK -> IF RBRACKET_OPEN CONDITIONAL RBRACKET_CLOSE CBRACKET_OPEN MAIN BREAK CBRACKET_CLOSE
IF_BLOCK -> IF RBRACKET_OPEN CONDITIONAL RBRACKET_CLOSE CBRACKET_OPEN MAIN CBRACKET_CLOSE ELSE_BLOCK
IF_BLOCK -> IF RBRACKET_OPEN CONDITIONAL RBRACKET_CLOSE CBRACKET_OPEN MAIN BREAK CBRACKET_CLOSE ELSE_BLOCK

ELSE_BLOCK -> ELSE IF_BLOCK
ELSE_BLOCK -> ELSE RETURN_STMT
ELSE_BLOCK -> ELSE CBRACKET_OPEN MAIN CBRACKET_CLOSE
ELSE_BLOCK -> ELSE CBRACKET_OPEN MAIN RETURN_STMT CBRACKET_CLOSE
ELSE_BLOCK -> ELSE CBRACKET_OPEN MAIN BREAK CBRACKET_CLOSE
ELSE_BLOCK -> ELSE BREAK

FOR_BLOCK -> FOR RBRACKET_OPEN FOR_PARAM RBRACKET_CLOSE CBRACKET_OPEN LOOP_BLOCK CBRACKET_CLOSE

FOR_PARAM -> LOOP_DEC SEMI_COLON LOOP_CONDITION SEMI_COLON LOOP_OPRT
FOR_PARAM -> SEMI_COLON LOOP_CONDITION SEMI_COLON LOOP_OPRT
FOR_PARAM -> LOOP_DEC SEMI_COLON LOOP_CONDITION SEMI_COLON
FOR_PARAM -> LOOP_DEC SEMI_COLON SEMI_COLON LOOP_OPRT
FOR_PARAM -> SEMI_COLON LOOP_CONDITION SEMI_COLON

WHILE_BLOCK -> WHILE RBRACKET_OPEN CONDITIONAL RBRACKET_CLOSE CBRACKET_OPEN LOOP_BLOCK CBRACKET_CLOSE

LOOP_BLOCK -> MAIN
LOOP_BLOCK -> MAIN LOOP_OPRT
LOOP_BLOCK -> BREAK_IF

BREAK_IF -> IF RBRACKET_OPEN CONDITIONAL RBRACKET_CLOSE CBRACKET_OPEN MAIN BREAK CBRACKET_CLOSE ELSE_BLOCK
BREAK_IF -> IF RBRACKET_OPEN CONDITIONAL RBRACKET_CLOSE CBRACKET_OPEN MAIN BREAK CBRACKET_CLOSE

SWITCH_BLOCK -> SWITCH RBRACKET_OPEN VARIABLE RBRACKET_CLOSE CBRACKET_OPEN CASE_BLOCK CBRACKET_CLOSE
CASE_BLOCK -> CASE_BLOCK CASE_BLOCK
CASE_BLOCK -> CASE VALUE COLON MAIN
CASE_BLOCK -> CASE VALUE COLON MAIN BREAK
CASE_BLOCK -> DEFAULT COLON MAIN

FUNCTION_BLOCK -> FUNCTION FUNC_NAME RBRACKET_OPEN FUNC_PARAM RBRACKET_CLOSE CBRACKET_OPEN MAIN CBRACKET_CLOSE
FUNCTION_BLOCK -> FUNCTION FUNC_NAME RBRACKET_OPEN FUNC_PARAM RBRACKET_CLOSE CBRACKET_OPEN MAIN RETURN_STMT CBRACKET_CLOSE
FUNCTION_BLOCK -> FUNCTION FUNC_NAME RBRACKET_OPEN RBRACKET_CLOSE CBRACKET_OPEN MAIN CBRACKET_CLOSE
FUNCTION_BLOCK -> FUNCTION FUNC_NAME RBRACKET_OPEN RBRACKET_CLOSE CBRACKET_OPEN MAIN RETURN_STMT CBRACKET_CLOSE

FUNC_NAME -> VARIABLE

FUNC_PARAM -> VARIABLE
FUNC_PARAM -> FUNC_PARAM COMMA FUNC_PARAM

RETURN_STMT -> RETURN RETURN_VAL
RETURN_VAL -> RETURN_VAL COMMA RETURN_VAL
RETURN_VAL -> VALUE

ERROR_BLOCK -> TRY_BLOCK CATCH_BLOCK
ERROR_BLOCK -> TRY_BLOCK CATCH_BLOCK FINALLY_BLOCK
ERROR_BLOCK -> TRY_BLOCK FINALLY_BLOCK
TRY_BLOCK -> TRY CBRACKET_OPEN MAIN CBRACKET_CLOSE
CATCH_BLOCK -> CATCH RBRACKET_OPEN VARIABLE RBRACKET_CLOSE CBRACKET_OPEN MAIN CBRACKET_CLOSE
FINALLY_BLOCK -> FINALLY CBRACKET_OPEN MAIN CBRACKET_CLOSE

CONDITIONAL -> CONDITIONAL AND CONDITIONAL
CONDITIONAL -> CONDITIONAL OR CONDITIONAL
CONDITIONAL -> NOT CONDITIONAL
CONDITIONAL -> VARIABLE
CONDITIONAL -> VALUE COMPARATOR VALUE
CONDITIONAL -> TRUE
CONDITIONAL -> FALSE

AND -> AMP AMP
OR -> PIPE PIPE

COMPARATOR -> EQUAL EQUAL
COMPARATOR -> EQUAL EQUAL EQUAL
COMPARATOR -> NOT EQUAL
COMPARATOR -> NOT EQUAL EQUAL
COMPARATOR -> GREATER_THAN
COMPARATOR -> GREATER_THAN EQUAL
COMPARATOR -> LOWER_THAN
COMPARATOR -> LOWER_THAN EQUAL

DELETE_BLOCK -> DELETE VARIABLE
DELETE_BLOCK -> DELETE VARIABLE DOT VARIABLE
DELETE_BLOCK -> DELETE VARIABLE SBRACKET_OPEN ELEMENT_BLOCK SBRACKET_CLOSE

STRING -> SINGLE_QUOTE VARIABLE SINGLE_QUOTE
STRING -> DOUBLE_QUOTE VARIABLE DOUBLE_QUOTE
STRING -> string

SIGN -> PLUS
SIGN -> MINUS
SIGN -> MOD
SIGN -> DIV
SIGN -> STAR
SIGN -> STAR STAR

OPERATION -> VALUE SIGN VALUE
OPERATION -> OPERATION SIGN VALUE
OPERATION -> VARIABLE PLUS PLUS
OPERATION -> PLUS PLUS VARIABLE
OPERATION -> VARIABLE MINUS MINUS
OPERATION -> MINUS MINUS VARIABLE
OPERATION -> VARIABLE SIGN EQUAL VALUE
OPERATION -> VALUE_DECLARATION

IF -> if
ELSE -> else
SWITCH -> switch
CASE -> case
DEFAULT -> default
FOR -> for
WHILE -> while
BREAK -> break
CONTINUE -> continue
FUNCTION -> function
RETURN -> return
TRY -> try
CATCH -> catch
FINALLY -> finally
THROW -> throw
VAR -> var
LET -> let
CONST -> const
TRUE -> true
FALSE -> false
NULL -> null
DELETE -> delete
SBRACKET_OPEN -> [
SBRACKET_CLOSE -> ]
CBRACKET_OPEN -> {
CBRACKET_CLOSE -> }
RBRACKET_OPEN -> (
RBRACKET_CLOSE -> )
LOWER_THAN -> <
GREATER_THAN -> >
COMMA -> ,
DOT -> .
COLON -> :
SEMI_COLON -> ;
SINGLE_QUOTE -> '
DOUBLE_QUOTE -> "
EQUAL -> =
PIPE -> |
AMP -> &
NOT -> !
VARIABLE -> variable
OPERATION -> operation
NAN -> NaN
NUMBER -> 0
NUMBER -> 1
NUMBER -> 2
NUMBER -> 3
NUMBER -> 4
NUMBER -> 5
NUMBER -> 6
NUMBER -> 7
NUMBER -> 8
NUMBER -> 9
PLUS -> +
MINUS -> -
STAR -> *
DIV -> /
MOD -> %